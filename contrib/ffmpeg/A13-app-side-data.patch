diff -ur libav-v11.3-0-g00abc00.orig/libavcodec/avcodec.h libav-v11.3-0-g00abc00/libavcodec/avcodec.h
--- libav-v11.3-0-g00abc00.orig/libavcodec/avcodec.h	2016-03-19 18:52:32.507753072 -0600
+++ libav-v11.3-0-g00abc00/libavcodec/avcodec.h	2016-03-19 18:52:10.333454372 -0600
@@ -924,6 +924,12 @@
      * e.g. no decoder available for codec.
      */
     AV_PKT_DATA_FALLBACK_TRACK,
+    /**
+     * This side data contains data that the application requires to
+     * be passed from the packet to the frame during decoding.  It is
+     * a more flexible replacement for AVCodecContext reordered_opaque
+     */
+    AV_PKT_DATA_APP_PRIVATE,
 };
 
 typedef struct AVPacketSideData {
diff -ur libav-v11.3-0-g00abc00.orig/libavcodec/utils.c libav-v11.3-0-g00abc00/libavcodec/utils.c
--- libav-v11.3-0-g00abc00.orig/libavcodec/utils.c	2015-03-08 19:51:11.000000000 -0600
+++ libav-v11.3-0-g00abc00/libavcodec/utils.c	2016-03-19 18:45:19.480551094 -0600
@@ -605,6 +605,15 @@
 
         memcpy(frame_sd->data, packet_sd, size);
     }
+    /* copy the app private data to the output frame */
+    packet_sd = av_packet_get_side_data(pkt, AV_PKT_DATA_APP_PRIVATE, &size);
+    if (packet_sd) {
+        frame_sd = av_frame_new_side_data(frame, AV_FRAME_DATA_APP_PRIVATE, size);
+        if (!frame_sd)
+            return AVERROR(ENOMEM);
+
+        memcpy(frame_sd->data, packet_sd, size);
+    }
 
     return 0;
 }
diff -ur libav-v11.3-0-g00abc00.orig/libavutil/frame.h libav-v11.3-0-g00abc00/libavutil/frame.h
--- libav-v11.3-0-g00abc00.orig/libavutil/frame.h	2015-03-08 19:51:11.000000000 -0600
+++ libav-v11.3-0-g00abc00/libavutil/frame.h	2016-03-19 18:47:04.188193865 -0600
@@ -87,6 +87,12 @@
      * in ETSI TS 101 154 using enum AVActiveFormatDescription.
      */
     AV_FRAME_DATA_AFD,
+    /**
+     * This side data contains data that the application requires to
+     * be passed from the packet to the frame during decoding.  It is
+     * a more flexible replacement for AVCodecContext reordered_opaque
+     */
+    AV_FRAME_DATA_APP_PRIVATE,
 };
 
 enum AVActiveFormatDescription {
